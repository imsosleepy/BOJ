
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static int M;
	static int N;
	static int K;
	static int[][] arr;
	static int[][] count;
	static boolean[][][] visited;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		K = sc.nextInt();
		M = sc.nextInt();
		N = sc.nextInt();

		arr = new int[N][M];
		visited = new boolean[N][M][K+1];
		count = new int[N][M];
		for (int i = 0; i  N; i++) {
			for (int j = 0; j  M; j++) {
				arr[i][j] = sc.nextInt();
			}
		}

		int count = bfs();
		System.out.println(count);
	}

	public static int bfs() {
		visited[0][0][K] = true;
		Monkey start = new Monkey(0, 0, K);
		QueueMonkey q = new LinkedListMonkey();
		q.offer(start);
		
		int[] dx = { 1, -1, 0, 0 };
		int[] dy = { 0, 0, 1, -1 };
		int[] ddx = { 1, 2, 2, 1, -1, -2, -2, -1 };
		int[] ddy = { 2, 1, -1, -2, -2, -1, 1, 2 };
		
		while (!q.isEmpty()) {
			Monkey temp = q.poll();
			if (temp.x == M - 1 && temp.y == N - 1) {
				return count[temp.x][temp.y];
			}
			
			
			for (int i = 0; i  4; i++) {
				int nx = temp.x + dx[i];
				int ny = temp.y + dy[i];

				if (nx  0  ny  0  nx = M  ny = N)
					continue;
				if (visited[nx][ny][K] == true)
					continue;
				if (arr[nx][ny] == 1)
					continue;
				else {
					int nowKnight = temp.knight;
					visited[nx][ny][nowKnight] = true;
					Monkey newMon = new Monkey(nx, ny, nowKnight);
					count[nx][ny] = count[temp.x][temp.y] + 1;
					q.offer(newMon);
				}
			}
			
			if (temp.knight  0) {
				
				for (int i = 0; i  8; i++) {
					int nx = temp.x + ddx[i];
					int ny = temp.y + ddy[i];

					if (nx  0  ny  0  nx = M  ny = N)
						continue;
					if (visited[nx][ny][K] == true)
						continue;
					if (arr[nx][ny] == 1)
						continue;
					else {
						int nowKnight = temp.knight-1;
						visited[nx][ny][nowKnight] = true;
						count[nx][ny] = count[temp.x][temp.y] + 1;
						Monkey newMon = new Monkey(nx, ny, nowKnight);
						q.offer(newMon);
					}
				}

			} 
		}
		return -1;
	}

	public static class Monkey {
		int x;
		int y;
		int knight;

		public Monkey(int x, int y, int knight) {
			this.x = x;
			this.y = y;
			this.knight = knight;
		}
	}
}